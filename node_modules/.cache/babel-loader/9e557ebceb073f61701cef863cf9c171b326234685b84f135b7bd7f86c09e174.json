{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/imvk._/Downloads/AlgorithmVisualizer-master/Algorithm-Visualizer/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";export function bfsdfs(grid,startNode,endNode,algo){var list=[];var nodesInOrder=[];nodesInOrder.push(startNode);list.push(startNode);startNode.isVisited=true;while(!!list.length){var currentNode=algo===\"bfs\"?list.shift():list.pop();nodesInOrder.push(currentNode);if(currentNode===endNode)return nodesInOrder;if(algo===\"dfs\")currentNode.isVisited=true;var nodesToPush=getNeighbours(grid,currentNode);var _iterator=_createForOfIteratorHelper(nodesToPush),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var node=_step.value;if(algo===\"bfs\"){node.isVisited=true;}node.previousNode=currentNode;list.push(node);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return nodesInOrder;}function getNeighbours(grid,node){var neighbors=[];var col=node.col,row=node.row;if(col>0)neighbors.push(grid[row][col-1]);if(row>0)neighbors.push(grid[row-1][col]);if(row<grid.length-1)neighbors.push(grid[row+1][col]);if(col<grid[0].length-1)neighbors.push(grid[row][col+1]);return neighbors.filter(function(neighbor){return!neighbor.isVisited&&!neighbor.isWall;});}","map":{"version":3,"names":["bfsdfs","grid","startNode","endNode","algo","list","nodesInOrder","push","isVisited","length","currentNode","shift","pop","nodesToPush","getNeighbours","_iterator","_createForOfIteratorHelper","_step","s","n","done","node","value","previousNode","err","e","f","neighbors","col","row","filter","neighbor","isWall"],"sources":["/Users/imvk._/Downloads/AlgorithmVisualizer-master/Algorithm-Visualizer/src/algorithms/bfs.jsx"],"sourcesContent":["export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}"],"mappings":"qLAAA,MAAO,SAAS,CAAAA,MAAMA,CAACC,IAAI,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAAC,CAC/C,GAAI,CAAAC,IAAI,CAAG,EAAE,CACb,GAAM,CAAAC,YAAY,CAAG,EAAE,CACvBA,YAAY,CAACC,IAAI,CAACL,SAAS,CAAC,CAC5BG,IAAI,CAACE,IAAI,CAACL,SAAS,CAAC,CACpBA,SAAS,CAACM,SAAS,CAAG,IAAI,CAC1B,MAAM,CAAC,CAACH,IAAI,CAACI,MAAM,CAAC,CAChB,GAAM,CAAAC,WAAW,CAAIN,IAAI,GAAK,KAAK,CAAGC,IAAI,CAACM,KAAK,CAAC,CAAC,CAACN,IAAI,CAACO,GAAG,CAAC,CAAE,CAC9DN,YAAY,CAACC,IAAI,CAACG,WAAW,CAAC,CAC9B,GAAIA,WAAW,GAAKP,OAAO,CAAG,MAAO,CAAAG,YAAY,CACjD,GAAIF,IAAI,GAAK,KAAK,CAAGM,WAAW,CAACF,SAAS,CAAG,IAAI,CACjD,GAAM,CAAAK,WAAW,CAAGC,aAAa,CAACb,IAAI,CAACS,WAAW,CAAC,CAAC,IAAAK,SAAA,CAAAC,0BAAA,CACjCH,WAAW,EAAAI,KAAA,KAA9B,IAAAF,SAAA,CAAAG,CAAA,KAAAD,KAAA,CAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,EAAgC,IAArB,CAAAC,IAAI,CAAAJ,KAAA,CAAAK,KAAA,CACX,GAAGlB,IAAI,GAAK,KAAK,CAAC,CACdiB,IAAI,CAACb,SAAS,CAAG,IAAI,CACzB,CACAa,IAAI,CAACE,YAAY,CAAGb,WAAW,CAC/BL,IAAI,CAACE,IAAI,CAACc,IAAI,CAAC,CAEnB,CAAC,OAAAG,GAAA,EAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA,WAAAT,SAAA,CAAAW,CAAA,IACL,CACA,MAAO,CAAApB,YAAY,CACvB,CAEA,QAAS,CAAAQ,aAAaA,CAACb,IAAI,CAACoB,IAAI,CAAC,CAC7B,GAAM,CAAAM,SAAS,CAAG,EAAE,CACpB,GAAO,CAAAC,GAAG,CAASP,IAAI,CAAhBO,GAAG,CAAEC,GAAG,CAAIR,IAAI,CAAXQ,GAAG,CACf,GAAID,GAAG,CAAG,CAAC,CAAED,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,CAAC,CAACD,GAAG,CAAG,CAAC,CAAC,CAAC,CAC/C,GAAIC,GAAG,CAAG,CAAC,CAAEF,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,CAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAAC,CAC/C,GAAIC,GAAG,CAAG5B,IAAI,CAACQ,MAAM,CAAG,CAAC,CAAEkB,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,CAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAAC,CAC7D,GAAIA,GAAG,CAAG3B,IAAI,CAAC,CAAC,CAAC,CAACQ,MAAM,CAAG,CAAC,CAAEkB,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,CAAC,CAACD,GAAG,CAAG,CAAC,CAAC,CAAC,CAChE,MAAO,CAAAD,SAAS,CAACG,MAAM,CAAC,SAAAC,QAAQ,QAAK,CAACA,QAAQ,CAACvB,SAAS,EAAI,CAACuB,QAAQ,CAACC,MAAM,EAAE,CAAC,CACnF"},"metadata":{},"sourceType":"module","externalDependencies":[]}