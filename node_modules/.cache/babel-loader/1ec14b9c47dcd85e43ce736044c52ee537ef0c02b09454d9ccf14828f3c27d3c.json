{"ast":null,"code":"import graph from\"./images/graph.png\";import primes from\"./images/prime.jpeg\";import sort from\"../homeComponents/images/sort.png\";import recursive from\"../homeComponents/images/recursive sorting.png\";import queen from\"./images/queen.png\";import binSearch from\"./images/binaryTree.png\";import convex from'./images/convexHull.png';import puzzle from'./images/Puzzle.jpg';import turing from'./images/turing.jpg';import Recursion from'./images/Recursion.png';export function getDetails(){return[{id:1,title:\"Path Finder\",description:\"Visualize graph algorithms Like Dijkstra, BFS, DFS\",route:\"/pathfinder\",img:graph},{id:2,title:\"Recursion Tree\",description:\"The process in which a function calls itself directly or indirectly is called recursion. Work in progress\",route:\"/graph\",img:Recursion},{id:3,title:\"Sorting Algorithm\",description:\"Compare different Sorting Algorithms\",route:\"/sort\",img:sort},{id:4,title:\"Recursive Sorting\",description:\"Compare different Recursive Sorting Algorithms\",route:\"/recursivesort\",img:recursive},{id:5,title:\"N Queen\",description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",route:\"/nqueen\",img:queen},{id:6,title:\"Turing Machine\",description:\"A Turing machine is a mathematical model of computation that defines an abstract machine that manipulates symbols on a strip of tape according to a table of rules\",route:\"/turing\",img:turing},{id:7,title:\"Prime Numbers\",description:\"Visualize how Seive is better than Brute force\",route:\"/prime\",img:primes},{id:8,title:\"Convex Hull\",description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",route:\"/convexhull\",img:convex},{id:9,title:\"Binary Search\",description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",route:\"/binarysearch\",img:binSearch},{id:10,title:\"15 Puzzle\",description:\"The 15 puzzle is a sliding puzzle having 15 square tiles numbered 115 in a frame that is 4 tiles high and 4 tiles wide, leaving one unoccupied tile position\",route:\"/15puzzle\",img:puzzle}];}","map":{"version":3,"names":["graph","primes","sort","recursive","queen","binSearch","convex","puzzle","turing","Recursion","getDetails","id","title","description","route","img"],"sources":["/Users/imvk._/Downloads/Algorithm-Visualizer/src/homeComponents/cardDetails.js"],"sourcesContent":["import graph from \"./images/graph.png\";\nimport primes from \"./images/prime.jpeg\";\nimport sort from \"../homeComponents/images/sort.png\";\nimport recursive from \"../homeComponents/images/recursive sorting.png\";\nimport queen from \"./images/queen.png\";\nimport binSearch from \"./images/binaryTree.png\";\nimport convex from './images/convexHull.png';\nimport puzzle from './images/Puzzle.jpg';\nimport turing from './images/turing.jpg';\nimport Recursion from './images/Recursion.png';\n\nexport function getDetails(){\n   return [\n       {\n           id:1,\n           title:\"Path Finder\",\n           description:\"Visualize graph algorithms Like Dijkstra, BFS, DFS\",\n           route:\"/pathfinder\",\n           img:graph\n       },\n       {\n           id:2,\n           title:\"Recursion Tree\",\n           description:\"The process in which a function calls itself directly or indirectly is called recursion. Work in progress\",\n           route:\"/graph\",\n           img:Recursion\n       },\n       {\n           id:3,\n           title:\"Sorting Algorithm\",\n           description:\"Compare different Sorting Algorithms\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:4,\n           title:\"Recursive Sorting\",\n           description:\"Compare different Recursive Sorting Algorithms\",\n           route:\"/recursivesort\",\n           img:recursive\n       },\n       {\n           id:5,\n           title:\"N Queen\",\n           description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n           route:\"/nqueen\",\n           img:queen\n       },\n       {\n           id:6,\n           title:\"Turing Machine\",\n           description:\"A Turing machine is a mathematical model of computation that defines an abstract machine that manipulates symbols on a strip of tape according to a table of rules\",\n           route:\"/turing\",\n           img:turing\n       },\n       {\n           id:7,\n           title:\"Prime Numbers\",\n           description:\"Visualize how Seive is better than Brute force\",\n           route:\"/prime\",\n           img:primes\n       },\n       {\n           id:8,\n           title:\"Convex Hull\",\n           description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\n           route:\"/convexhull\",\n           img:convex\n       },\n       {\n           id:9,\n           title:\"Binary Search\",\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n           route:\"/binarysearch\",\n           img:binSearch\n       },\n       {\n           id:10,\n           title:\"15 Puzzle\",\n           description:\"The 15 puzzle is a sliding puzzle having 15 square tiles numbered 115 in a frame that is 4 tiles high and 4 tiles wide, leaving one unoccupied tile position\",\n           route:\"/15puzzle\",\n           img:puzzle\n       }\n\n   ]\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mCAAmC,CACpD,MAAO,CAAAC,SAAS,KAAM,gDAAgD,CACtE,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,MAAM,KAAM,yBAAyB,CAC5C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAE9C,MAAO,SAAS,CAAAC,UAAUA,CAAA,CAAE,CACzB,MAAO,CACH,CACIC,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,aAAa,CACnBC,WAAW,CAAC,oDAAoD,CAChEC,KAAK,CAAC,aAAa,CACnBC,GAAG,CAACf,KACR,CAAC,CACD,CACIW,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,gBAAgB,CACtBC,WAAW,CAAC,2GAA2G,CACvHC,KAAK,CAAC,QAAQ,CACdC,GAAG,CAACN,SACR,CAAC,CACD,CACIE,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,mBAAmB,CACzBC,WAAW,CAAC,sCAAsC,CAClDC,KAAK,CAAC,OAAO,CACbC,GAAG,CAACb,IACR,CAAC,CACD,CACIS,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,mBAAmB,CACzBC,WAAW,CAAC,gDAAgD,CAC5DC,KAAK,CAAC,gBAAgB,CACtBC,GAAG,CAACZ,SACR,CAAC,CACD,CACIQ,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,SAAS,CACfC,WAAW,CAAC,6HAA6H,CACzIC,KAAK,CAAC,SAAS,CACfC,GAAG,CAACX,KACR,CAAC,CACD,CACIO,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,gBAAgB,CACtBC,WAAW,CAAC,oKAAoK,CAChLC,KAAK,CAAC,SAAS,CACfC,GAAG,CAACP,MACR,CAAC,CACD,CACIG,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,eAAe,CACrBC,WAAW,CAAC,gDAAgD,CAC5DC,KAAK,CAAC,QAAQ,CACdC,GAAG,CAACd,MACR,CAAC,CACD,CACIU,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,aAAa,CACnBC,WAAW,CAAC,sGAAsG,CAClHC,KAAK,CAAC,aAAa,CACnBC,GAAG,CAACT,MACR,CAAC,CACD,CACIK,EAAE,CAAC,CAAC,CACJC,KAAK,CAAC,eAAe,CACrBC,WAAW,CAAC,wFAAwF,CACpGC,KAAK,CAAC,eAAe,CACrBC,GAAG,CAACV,SACR,CAAC,CACD,CACIM,EAAE,CAAC,EAAE,CACLC,KAAK,CAAC,WAAW,CACjBC,WAAW,CAAC,8JAA8J,CAC1KC,KAAK,CAAC,WAAW,CACjBC,GAAG,CAACR,MACR,CAAC,CAEJ,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}